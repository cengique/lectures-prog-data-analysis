[{"content":"Welcome! We are still adding materials. Select a chapter from the menu on the left.\n","date":1508426775,"description":"Home page","lastmod":"2019-10-26T15:26:15Z","objectID":"3976528693a0108357f4928017600865","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/","publishdate":"2018-11-23T15:26:15Z","title":"Home"},{"content":"This site contains a collection of lectures, assignments, and instructor materials for teaching software engineering or development, at an intermediate level. It is assumed that students already know basic software engineering terms and skills.\nMaterials are used for the ITEC 3870 Software Development II course taught at Georgia Gwinnett College . They were developed by Cengiz Gunay and Anca Doloc-Mihu , supported by an Affordable Learning Georgia grant in 2019-2020.\nSome materials are courtesy of Joan Smith, Eugene Agichstein, and the Internets. Slides are offered with the license: CC BY-SA 4.0 .\nTo modify and use these materials in your classes, fork the Github repository or use the edit link at the bottom right of each page.\n","date":1508426775,"description":"About this Site","lastmod":"2019-10-26T15:26:15Z","objectID":"6083a88ee3411b0d17ce02d738f69d47","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/about/","publishdate":"2018-11-23T15:26:15Z","title":"About this Site"},{"content":"Data input/output and cleaning ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Working with vector data, Next - Instructor Materials \n Data formats  See Python for Data Analysis, Chapter 6 and 7  Some topics:\n Loading and saving in different data formats Common options for loading Handling exceptions in formatting Selecting index columns Reading from URLs Reading from databases Binary formats (e.g., HDF5)   Data cleaning  Missing data with N/A, NaN, and NULL values Filtering missing data out Filling in missing data values Eliminating duplicates Replacing values Adding new calculated columns Cosmetics (axis labels, etc) Discretization Outliers Random sampling and shuffling String manipulation and regular expressions  ","date":-62135596800,"description":"","objectID":"3b5cb6208fee9a3363a262b70b0bc79b","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-data-io-cleaning/","title":"Data input/output and cleaning"},{"content":"Python data structures ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Introduction, Next - Errors and Exceptions \n Time complexity, big-O notation  General idea: time it takes for an algorithm to run. complexity: the number of steps involved in a process or pieces that make up a system ?   It makes a difference in everyday use:\nFast and high quality services vs those that lag, crash, and are unreliable\n   Big-O calculated based on size  We are more concerned about performance of algorithms when they work large amounts of data Does this algorithm scale up when it is given a large input? Therefore, O() notation indicates growth of time with an input, n   Definitions: Big-O notation  $O(1)$: constant time (e.g. getting an item from an array with an index) $O(\\log(n))$: less than linear, exponent of n\u0026amp;rsquo;s growth (e.g., binary tree search; $log_2(4)=2$, $log_2(16)=4$) $O(\\sqrt{n})$: more than log, less than n (e.g., \u0026amp;hellip;?) $O(n)$: linear time with size (e.g. summation of every element in list) $O(n^2)$: polynomial time, in this case squared (e.g., two nested for loops, going through the whole list)   Popular algorithms  Index lookup: $O(1)$ Search in array: $O(n)$ Hash lookup: $O(1)$ (in Python: dict and sets)   About sets Pros:\n faster lookup times ensures uniqueness of items awesome methods for determining what elements two sets do and do not share  Cons:\n uses more memory slower to build and append to than a list   Big-O can also apply memory size  Same idea: $O(1)$, $O(n)$, etc Hashing usually requires additional space Do not use complex data structures unnecessarily!   What\u0026amp;rsquo;s hashing?  hash is a math function that can calculate a number out anything the number would be unique (or close to) for each input hash(\u0026amp;quot;hello\u0026amp;quot;) -\u0026amp;gt; 46487  hash number can be used (with some tricks) as an index then you can use the index instead of searching with $O(1)$  Other uses:  Comparing complex objects Sorting …","date":-62135596800,"description":"","objectID":"f7294d35a7c4e33aa3b0e36eb25af691","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-data-structures/","title":"Python data structures"},{"content":"Errors and Exceptions ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Python data structures, Next - Recursion \n What are exceptions?  A way to break out of the linear execution of a program Usually for an exceptional situation (e.g., an error) Otherwise, it may cause your program to crash Why not instead use if statements to catch errors?   Cleaner logic and execution, does not disrupt logic Exception may arise from multiple places    Examples with if statements vs exceptions If statement:\nvalue = count_inputs(...) if value \u0026amp;lt; -1: print(\u0026amp;#34;Error in counting inputs!\u0026amp;#34;) exit -1 # now do stuff with value ...  Exception:\ntry: value = count_inputs(...) # now do stuff with value ... except: print(\u0026amp;#34;Error in counting inputs!\u0026amp;#34;) raise    Exceptions in Python  All exceptions should be subclasses of BaseException You can have multiple except clauses to catch specific exceptions:  import sys try: f = open(\u0026amp;#39;myfile.txt\u0026amp;#39;) s = f.readline() i = int(s.strip()) except OSError as err: print(\u0026amp;#34;OS error: {0}\u0026amp;#34;.format(err)) except ValueError: print(\u0026amp;#34;Could not convert data to an integer.\u0026amp;#34;) except: print(\u0026amp;#34;Unexpected error:\u0026amp;#34;, sys.exc_info()[0]) raise ","date":-62135596800,"description":"","objectID":"5ba8d467aad3a8fe2592ffa1a254146b","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-exceptions/","title":"Errors and Exceptions"},{"content":"Introduction ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Schedule, Next - Python data structures \n Welcome  Meet your instructor Instructor: Dr. Cengiz Gunay Soft-Eng-Practicum Github Organization Email: cgunay@ggc.edu Office: Virtual and W-2117 (by appointment )\nPhone: 678-951-9621 (also GroupMe)\n About the instructor: Dr Cengiz Gunay  Went to computer science grad school on artificial intelligence neural networks Then, worked as post-doctoral fellow at Emory Univ. on simulating models of biological neurons and large-scale biological data mining (e.g., SQL, neural nets, genetic algos) Started teaching as visiting Faculty teaching at Emory Univ., Math \u0026amp;amp; CS Dept. At GGC, became IT faculty with Soft Dev focus and helped start a Data Science and Analytics major   Your turn!  Login/register on discussion and respond to the “Introductions” topic; create an inline resume  Also quickly introduce yourself now in class!\n Name Major/Year What do you aim to achieve by taking this course Something fun about yourself    Semester plan TBA\n Syllabus and hands on work  Let\u0026amp;rsquo;s look through the syllabus  Time to work on:\n Register for Discord and Piazza Respond to introductions post   ","date":-62135596800,"description":"","objectID":"b9dff6dd63ef024542b989cac29aa30c","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-intro/","title":"Introduction"},{"content":"Object Oriented Programming ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Recursion, Next - Working with vector data \n Class activity: make your own class!  Create a file with your name and put your class in it here :    Class activity: inherit!  Follow instructions by forking my project    ","date":-62135596800,"description":"","objectID":"a0ced4e712d9229a2b61d92ae111d423","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-object-oriented/","title":"Object Oriented Programming"},{"content":"Recursion ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Errors and Exceptions, Next - Object Oriented Programming \n (click to read more)  What is recursion  Reusing a function Calling itself Similar to a loop But not linear, instead it could be exponential   Why recursion What is the advantage over loops?\n Divide-and-conquer type problems Tree search Sorting etc.      Classic example: factorial   (click to read more) ","date":-62135596800,"description":"","objectID":"6dabfd26e80dbc9bfd094c68bedc05f1","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-recursion/","title":"Recursion"},{"content":"Working with vector data ITEC 4400/2160 Python Programming for Data Analysis, Cengiz Günay (License: CC BY-SA 4.0)\n Prev - Object Oriented Programming, Next - Data input/output and cleaning \n Python\u0026amp;rsquo;s Numpy module From Python for Data Analysis, 2nd Ed, chapter 4:\n enables working with $n$-dimensional arrays math functions without needing to loop over arrays reading/writing to files advanced math: linear algebra, random numbers, etc   Numpy overview  Creating and manipulating ndarray objects and doing math on them Data types for efficient storage and use Indexing and slicing; with boolean expressions and fancy indexing Unary and binary math functions    Linear algebra basics: Vectors and matrices  Basics: Vectors Vectors: $\\vec{x} = [ 1, 2, 3 ]$\n Why? Most data comes in vectors  Can do bulk operations using math magic:\n Adding or subtracting a scalar: $$ \\vec{x} + 1 = [ 2, 3, 4 ] $$ Multiplying or dividing by a scalar: $$ \\vec{x} \\times 2 = [ 2, 4, 6 ] $$ Adding two vectors (of same size): $$ \\vec{x} + \\vec{x} = [ 2, 4, 6 ] $$   Vector math inner/dot product : $$ \\vec{x} \\cdot \\vec{y} = \\sum x_i y_i $$\n Calculates \u0026amp;ldquo;length of projection\u0026amp;rdquo; Multiply corresponding elements and sum to result in scalar Useful in calculating weighted sums, scaling data elements, etc.  outer product : $$ \\vec{x} \\times \\vec{y} = [x_i y_j]_{ij} $$\n element-by-element multiplication, results in $ n \\times m $ size matrix useful when duplicating rows or columns, or scaling them   Basics: Matrices $$ A=\\left[ \\begin{array}{ccc} a_{11} \u0026amp;amp; \\cdots \u0026amp;amp; a_{1n} \\newline \\vdots \u0026amp;amp; \\ddots \u0026amp;amp; \\vdots \\newline a_{m1} \u0026amp;amp; \\cdots \u0026amp;amp; a_{mn} \\newline \\end{array} \\right] $$\nUses:\n Aggregation of many vectors Bases for transformation spaces Image data and manipulation   Matrix multiplication Must have matching inner dimensions, results in a matrix: $$ A_{m\\times n} \\times B_{n\\times o} = C_{m\\times o} $$\nEach element of output matrix is the result of one inner product: $$ c_{ij} …","date":-62135596800,"description":"","objectID":"b025890888f63e4308145cbbc5a30a4f","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/chapter-vectors/","title":"Working with vector data"},{"content":"Select a chapter from the menu.\n","date":1603121175,"description":"Instructor Materials. Email authors for hidden materials like quizzes and their keys.","lastmod":"2020-12-20T15:26:15Z","objectID":"9e6a1416d4bf7d2fcfc2765ce90e972f","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/instructor/","publishdate":"2019-11-23T15:26:15Z","title":"Instructor Materials"},{"content":"This section includes all the small assignments for the course.\nTBA\n","date":1603121175,"description":"Assignments","lastmod":"2020-12-20T15:26:15Z","objectID":"a94b5e3a08c53965757cf6617c2bd9f4","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/instructor/assignments/","publishdate":"2019-11-23T15:26:15Z","title":"Assignments"},{"content":"TBA\n","date":1603121175,"description":"Exams","lastmod":"2020-12-20T15:26:15Z","objectID":"326e4c3e83433151edcdc7fadb35e00d","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/instructor/exams/","publishdate":"2019-11-23T15:26:15Z","title":"Exams"},{"content":" Week#DateModuleSetupTopicHands-onAssignment    var modules = [{\u0026#34;assignment\u0026#34;:\u0026#34;Post introductions. Register with chat/forum services (Discord, Reddit) and JetBrains Academy tutorial site. Do Stage 1 on JetBrains Academy.\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;Entry survey and post introduction. JetBrains Academy.\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Semester overview, introductions, and Python basics\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;Initialize LMS, archive and clear discussion area, post syllabus, post intro slides, set up skills survey, make discussion posts for welcome message, \\u003ci\\u003eMessage in a Bottle\\u003c/i\\u003e, and \\u003ci\\u003eIntroductions\\u003c/i\\u003e. Post JetBrains Academy Stage 1 assignment.\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Intro slides.\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;Read DSS chapter 2. Do another set of exercises from JetBrains Academy\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;JetBrains Academy.\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Python refresher\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;Add everyone to LMS/chat/discussion services. Post lecture slides.\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Go through DSS chapter 2 with Python basics important for data analysis\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Advanced data structures\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Collections, Dictionary, Set, Tuple, Slicing\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Exceptions\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Recursion\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Midterm review and exam\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;in-class REPL.it\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Object-oriented programming\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;in-class REPL.it\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Inheritance and Polymorphism\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:false,\u0026#34;name\u0026#34;:\u0026#34;SPRING BREAK\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;read PDA Ch 4\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;Download and install Anaconda, run Jupyter Notebooks/Lab\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Working with …","date":1611588375,"description":"Schedule","lastmod":"2021-01-25T15:26:15Z","objectID":"450c1bfd912a1a4193a1e9d8eba5932a","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/instructor/schedule/","publishdate":"2020-12-20T15:26:15Z","title":"Schedule"},{"content":"Syllabus Example Syllabus which includes learning outcomes, textbook, schedule and details about the course organization.\nParts that instructor needs to change to his/her own data are emphasized in yellow.\n","date":1603121175,"description":"Syllabus","lastmod":"2020-12-20T15:26:15Z","objectID":"2dbf0565756b6df943a700c93c819e80","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/instructor/syllabus/","publishdate":"2019-11-23T15:26:15Z","title":"Syllabus"},{"content":" Week#DateModuleTopicHands-onAssignment    var modules = [{\u0026#34;assignment\u0026#34;:\u0026#34;Post introductions. Register with chat/forum services (Discord, Reddit) and JetBrains Academy tutorial site. Do Stage 1 on JetBrains Academy.\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;Entry survey and post introduction. JetBrains Academy.\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Semester overview, introductions, and Python basics\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;Initialize LMS, archive and clear discussion area, post syllabus, post intro slides, set up skills survey, make discussion posts for welcome message, \\u003ci\\u003eMessage in a Bottle\\u003c/i\\u003e, and \\u003ci\\u003eIntroductions\\u003c/i\\u003e. Post JetBrains Academy Stage 1 assignment.\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Intro slides.\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;Read DSS chapter 2. Do another set of exercises from JetBrains Academy\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;JetBrains Academy.\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Python refresher\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;Add everyone to LMS/chat/discussion services. Post lecture slides.\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Go through DSS chapter 2 with Python basics important for data analysis\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Advanced data structures\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;Collections, Dictionary, Set, Tuple, Slicing\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Exceptions\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Recursion\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Midterm review and exam\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;in-class REPL.it\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Object-oriented programming\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;JetBrains\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;in-class REPL.it\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Inheritance and Polymorphism\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;module\u0026#34;:false,\u0026#34;name\u0026#34;:\u0026#34;SPRING BREAK\u0026#34;,\u0026#34;setup\u0026#34;:\u0026#34;\u0026#34;,\u0026#34;topic\u0026#34;:\u0026#34;\u0026#34;},{\u0026#34;assignment\u0026#34;:\u0026#34;read PDA Ch 4\u0026#34;,\u0026#34;days\u0026#34;:7,\u0026#34;handson\u0026#34;:\u0026#34;Download and install Anaconda, run Jupyter Notebooks/Lab\u0026#34;,\u0026#34;module\u0026#34;:1,\u0026#34;name\u0026#34;:\u0026#34;Working with …","date":1611588375,"description":"Schedule","lastmod":"2021-01-25T15:26:15Z","objectID":"b551dedd1c4e75ac43bdd549448b7dab","permalink":"https://cengique.github.io/lectures-prog-data-analysis/sp21/schedule/","publishdate":"2020-12-20T15:26:15Z","title":"Schedule"}]